version: "3.9"
services:
  api:
    image: message_api
    container_name: api_container
    build:
      context: src
      dockerfile: MessageApp.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080" 
      - "8081:8081" 
    depends_on:
      - postgres
    networks:
      - application

  web:
    image: message_web
    container_name: web_container
    build:
      context: src
      dockerfile: MessageApp.WEB/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8880:8880" 
      - "8881:8881" 
    networks:
      - application

  postgres:
    image: message_app_db
    container_name: postgres_container
    build:
      context: .
      dockerfile: postgresql/Dockerfile
    environment:
      POSTGRES_DB: "message_app"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgresql/scripts:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d message_app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - application

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "yaroslav.shamov2@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - application

volumes:
  postgres-data:
  pgadmin-data:

networks:
  application:
    name: application
    driver: bridge